version: '3.0'
services:
  rest-proxy:
    image: confluentinc/cp-kafka-rest:latest
    ports:
      - 8082:8082
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: REPLACEME_SR_URL
      KAFKA_REST_CLIENT_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
      KAFKA_REST_CLIENT_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: REPLACEME_SR_AUTH
      KAFKA_REST_BOOTSTRAP_SERVERS: REPLACEME_BOOTSTRAP_SERVERS
      KAFKA_REST_SSL_ENDPOINT_IDENTIFIED_ALGORITHM: "https"
      KAFKA_REST_SECURITY_PROTOCOL: "SASL_SSL"
      KAFKA_REST_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"REPLACEME_APIKEY\" password=\"REPLACEME_APISECRET/g\";"
      KAFKA_REST_SASL_MECHANISM: "PLAIN"
      KAFKA_REST_CLIENT_BOOTSTRAP_SERVERS: REPLACEME_BOOTSTRAP_SERVERS
      KAFKA_REST_CLIENT_SSL_ENDPOINT_IDENTIFIED_ALGORITHM: "https"
      KAFKA_REST_CLIENT_SECURITY_PROTOCOL: "SASL_SSL"
      KAFKA_REST_CLIENT_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"REPLACEME_APIKEY\" password=\"REPLACEME_APISECRET/g\";"
      KAFKA_REST_CLIENT_SASL_MECHANISM: "PLAIN"

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect
    depends_on:
      - ksqldbcli
    ports:
      - 8083:8083
    environment:
      CONNECT_GROUP_ID: mysql-v01
      CONNECT_CONFIG_STORAGE_TOPIC: mysql-configs-v01
      CONNECT_OFFSET_STORAGE_TOPIC: mysql-offsets-v01
      CONNECT_STATUS_STORAGE_TOPIC: mysql-status-v01
      CONNECT_CUB_KAFKA_TIMEOUT: 300
      CONNECT_BOOTSTRAP_SERVERS: REPLACEME_BOOTSTRAP_SERVERS
      CONNECT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
      CONNECT_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_SASL_MECHANISM: PLAIN
      CONNECT_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"REPLACEME_APIKEY\" password=\"REPLACEME_APISECRET/g\";"
      CONNECT_REQUEST_TIMEOUT_MS: 20000
      CONNECT_RETRY_BACKOFF_MS: 500
      CONNECT_PRODUCER_BOOTSTRAP_SERVERS: REPLACEME_BOOTSTRAP_SERVERS
      CONNECT_PRODUCER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
      CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_PRODUCER_SASL_MECHANISM: PLAIN
      CONNECT_PRODUCER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"REPLACEME_APIKEY\" password=\"REPLACEME_APISECRET/g\";"
      CONNECT_PRODUCER_REQUEST_TIMEOUT_MS: 20000
      CONNECT_PRODUCER_RETRY_BACKOFF_MS: 500
      CONNECT_CONSUMER_BOOTSTRAP_SERVERS: REPLACEME_BOOTSTRAP_SERVERS
      CONNECT_CONSUMER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_CONSUMER_SASL_MECHANISM: PLAIN
      CONNECT_CONSUMER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"REPLACEME_APIKEY\" password=\"REPLACEME_APISECRET/g\";"
      CONNECT_CONSUMER_REQUEST_TIMEOUT_MS: 20000
      CONNECT_CONSUMER_RETRY_BACKOFF_MS: 500
      CONNECT_VALUE_CONVERTER_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: REPLACEME_SR_AUTH
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: REPLACEME_SR_URL
      CONNECT_REST_ADVERTISED_HOST_NAME: REPLACEME_DB_HOSTNAME
      CONNECT_REST_PORT: 8083
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_CONFIG_STORAGE_PARTITIONS: 1
      CONNECT_OFFSET_STORAGE_PARTITIONS: 1
      CONNECT_STATUS_STORAGE_PARTITIONS: 1
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components/'
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
    command:
      - bash
      - -c
      - |
        # # ------------
        # # run any wgets needed here
        #wget etc
        #
        confluent-hub install --no-prompt confluentinc/kafka-connect-http:latest
        sleep 2
        #
        echo "Removing unwanted plugins to improve startup time ...(activemq/ibmmq/jms/elasticsearch/s3) ...
        cd /usr/share/java/
        rm -rf kafka-connect-activemq kafka-connect-ibmmq kafka-connect-jms kafka-connect-elasticsearch kafka-connect-s3
        /etc/confluent/docker/run &
        #
        echo "Waiting for Kafka Connect to start listening on $$CONNECT_REST_ADVERTISED_HOST_NAME ⏳"
        while [ $$(curl -s -o /dev/null -w %{http_code} http://localhost:8083/connectors) -ne 200 ] ; do
          echo -e $$(date) " Kafka Connect listener HTTP state: " $$(curl -s -o /dev/null -w %{http_code} http://localhost:8083/connectors) " (waiting for 200)"
          sleep 5
        done
        echo -e "\n--\n+> Creating Kafka Connect JDBC Source"
        curl -X POST http://localhost:8083/connectors -H "Content-Type: application/json" -d '{
                   "name": "sink-to-sap-po",
                   "config": {
                                                         "topics": "topic-53-json-after"
        ,                                             "tasks.max": "1"
        ,                                       "connector.class": "io.confluent.connect.http.HttpSinkConnector"
        ,                                             "tasks.max": 1
        ,                                          "http.api.url": "http://your-sap-po-rest-url"
        ,                                       "value.converter": "org.apache.kafka.connect.storage.StringConverter"
        ,                     "confluent.topic.bootstrap.servers": "REPLACEME_BOOTSTRAP_SERVER
        ,                    "confluent.topic.replication.factor": "3"
        ,                            "reporter.result.topic.name": ""
        ,                             "reporter.error.topic.name": ""
        , "confluent.topic.ssl.endpoint.identification.algorithm": "https"
        ,                     "confluent.topic.security.protocol": "SASL_SSL"
        ,                        "confluent.topic.sasl.mechanism": "PLAIN"
        ,                      "confluent.topic.sasl.jaas.config": "org.apache.kafka.common.security.plain.PlainLoginModule required username:\"REPLACEME_APIKEY\" password:\"REPLACEME_APISECRET\";"
                           }
                   }'
        #
        # Don't let the container die
        sleep infinity

  ksqldb:
    image: confluentinc/cp-ksqldb-server:latest
    hostname: ksqldb
    container_name: ksqldb
    ports:
      - 8088:8088
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: REPLACEME_BOOTSTRAP_SERVERS
      KSQL_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https
      KSQL_SECURITY_PROTOCOL: SASL_SSL
      KSQL_SASL_MECHANISM: PLAIN
      KSQL_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"REPLACEME_APIKEY\" password=\"REPLACEME_APISECRET\";"
      #KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      #KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_CONNECT_URL: http://connect1:8083
      KSQL_VALUE_CONVERTER_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
      KSQL_VALUE_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: REPLACEME_SR_AUTH
      KSQL_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: REPLACEME_SR_URL
      KSQL_KSQL_SCHEMA_REGISTRY_URL: REPLACEME_SR_URL
      KSQL_KSQL_SCHEMA_REGISTRY_BASIC_AUTH_CREDENTIALS_SOURCE: "USER_INFO"
      KSQL_KSQL_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: REPLACEME_SR_AUTH
      KSQL_REST_ADVERTISED_HOST_NAME: 'ksql1'
      KSQL_KSQL_SERVICE_ID: ksql-sap
      KSQL_KSQL_INTERNAL_TOPIC_REPLICAS: 3
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 3
      KSQL_KSQL_STREAMS_REPLICATION_FACTOR: 3
      KSQL_KSQL_SINK_REPLICAS: 3
      KSQL_LOG4J_ROOT_LOGLEVEL: ERROR


  ksqldbcli:
    image: confluentinc/ksqldb-cli:latest
    container_name: ksqldbcli
    depends_on:
      - ksqldb
    tty: true
    command:
      - sh
      - -c
      - |
        echo "..."
        echo "..."
        echo "... Waiting 45 seconds for ksqldb to start up"
        echo "..."
        sleep 45
        echo "=============== Starting ksqldbcli Commands for this test scenario ==================="
        echo "Creating example topics topic-53-json-before with stream ST_JSON_BEFORE"
        echo "and topic topic-53-json-after with stream ST_JSON_AFTER"
        echo "JSON messages in topic-53-json-before will be stream-processed for JSON wrapping understandable to SAP PO"
        echo "Use the Kafka Connect HTTP Sink connector to stream messages from topic-53-json-after to SAP PO"
        echo ""
        echo "..."
        echo "..."
        echo "DROP STREAM IF EXISTS ST_JSON_BEFORE;" | ksql http://ksqldb:8088
        echo "CREATE STREAM ST_JSON_BEFORE (json_string varchar) WITH (kafka_topic='topic-53-json-before',partitions='1',value_format='kafka');" | ksql http://ksqldb:8088
        echo "INSERT INTO ST_JSON_BEFORE (JSON_STRING) VALUES ('{ \"APTABLE1\":{\"item\":[{\"BLDAT\":20192020,\"BUDAT\":20192020,\"BLART\":\"KI\"}");" | ksql http://ksqldb:8088
        echo "CREATE STREAM ST_JSON_AFTER WITH (kafka_topic='topic-53-json-after',partitions='1',value_format='kafka') AS SELECT CONCAT(CONCAT('{ \"records\":[{ \"value\":',JSON_STRING),']}}}]}') FROM ST_JSON_BEFORE;" | ksql http://ksqldb:8088
        echo ""
        echo "..."
        echo "..."
        echo "compare contents using ccloud consume --topic topic-53-json-string --from-beginning"
        echo " "
        echo "ccloud consume --topic topic-53-json-string --from-beginning"

